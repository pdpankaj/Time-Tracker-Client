{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-employee/add-employee.component.css","webpack:///./src/app/add-employee/add-employee.component.html","webpack:///./src/app/add-employee/add-employee.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/employee/employee.component.css","webpack:///./src/app/employee/employee.component.html","webpack:///./src/app/employee/employee.component.ts","webpack:///./src/app/existing-employee/existing-employee.component.css","webpack:///./src/app/existing-employee/existing-employee.component.html","webpack:///./src/app/existing-employee/existing-employee.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/logout/logout.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/pipe/filter.pipe.ts","webpack:///./src/app/search/search.component.css","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/service/auth-gaurd.service.ts","webpack:///./src/app/service/authentication.service.ts","webpack:///./src/app/service/httpclient.service.ts","webpack:///./src/app/service/jwtauth-htpp-interceptor-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1lbXBsb3llZS9hZGQtZW1wbG95ZWUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"col-md-6\\\" user-container>\\r\\n  <h2 class=\\\"text-center\\\">Submit Your Time</h2>\\r\\n  <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"firstName\\\">First Name:</label>\\r\\n      <input type=\\\"name\\\" placeholder=\\\"First Name\\\" name=\\\"firstName\\\" class=\\\"form-control\\\" formControlName=\\\"firstName\\\"\\r\\n        id=\\\"firstName\\\">\\r\\n        <div class=\\\"error\\\" *ngIf=\\\"addForm.controls['firstName'].hasError('required') && addForm.controls['firstName'].touched\\\">First name is required</div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"lastName\\\">Last Name:</label>\\r\\n      <input type=\\\"name\\\" placeholder=\\\"Last Name\\\" name=\\\"lastName\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\"\\r\\n        id=\\\"lastName\\\">\\r\\n        <div class=\\\"error\\\" *ngIf=\\\"addForm.controls['lastName'].hasError('required') && addForm.controls['lastName'].touched\\\">Last name is required</div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"emailId\\\">Email ID:</label>\\r\\n      <input type=\\\"email\\\" placeholder=\\\"Email ID\\\" name=\\\"emailId\\\" formControlName=\\\"emailId\\\" class=\\\"form-control\\\"\\r\\n        id=\\\"emailId\\\">\\r\\n        <div class=\\\"error\\\" *ngIf=\\\"addForm.controls['emailId'].hasError('required') && addForm.controls['emailId'].touched\\\">Email ID is required</div>\\r\\n        <div class=\\\"error\\\" *ngIf=\\\"addForm.controls['emailId'].hasError('email') && addForm.controls['emailId'].touched\\\">Email ID is required</div>\\r\\n        \\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"inTime\\\">In Time:</label>\\r\\n      <input type=\\\"text\\\"  placeholder=\\\"21.11.2019 09:00\\\" name=\\\"inTime\\\" class=\\\"form-control\\\" formControlName=\\\"inTime\\\" id=\\\"inTime\\\">\\r\\n      <div class=\\\"error\\\" *ngIf=\\\"addForm.controls['inTime'].hasError('required') && addForm.controls['inTime'].touched\\\">In time is required</div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"outTime\\\">Out Time:</label>\\r\\n      <input type=\\\"text\\\"  placeholder=\\\"21.11.2019 17:00\\\" name=\\\"outTime\\\" class=\\\"form-control\\\" formControlName=\\\"outTime\\\" id=\\\"outTime\\\">\\r\\n      <div class=\\\"error\\\" *ngIf=\\\"addForm.controls['outTime'].hasError('required') && addForm.controls['outTime'].touched\\\">Out time is required</div>\\r\\n    </div>\\r\\n\\r\\n    <button class=\\\"btn btn-primary\\\" [disabled]=\\\"addForm.invalid\\\">Create</button>\\r\\n  </form>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl, ValidatorFn, ValidationErrors } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { HttpClientService, Employee } from '../service/httpclient.service';\r\n\r\n@Component({\r\n  selector: 'app-add-employee',\r\n  templateUrl: './add-employee.component.html',\r\n  styleUrls: ['./add-employee.component.css']\r\n})\r\n\r\nexport class AddEmployeeComponent implements OnInit {\r\n\r\n  employee: Employee = new Employee(-1, \"\", \"\", \"\", \"\", \"\");\r\n  public adding = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private httpClientService: HttpClientService\r\n  ) { }\r\n\r\n  addForm: FormGroup;\r\n\r\n  ngOnInit() {\r\n    this.addForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      emailId: ['', [Validators.required, Validators.email]],\r\n      inTime: ['', Validators.required],\r\n      outTime: ['', Validators.required]\r\n    },\r\n      { validators: this.InOutTimeValidation });\r\n\r\n    let existingEmployee = this.httpClientService.getEmployee();\r\n    if (existingEmployee) {\r\n      //this.httpClientService.getEmployeeByEmailId().subscribe(\r\n      //response => this.handleResponse(response),\r\n      //);\r\n      this.addForm.controls.firstName.setValue(existingEmployee.firstName);\r\n      this.addForm.controls.lastName.setValue(existingEmployee.lastName);\r\n      this.addForm.controls.emailId.setValue(existingEmployee.emailId);\r\n      this.addForm.controls.inTime.setValue('');\r\n      this.addForm.controls.outTime.setValue('');\r\n    }\r\n  }\r\n\r\n  handleResponse(response) {\r\n    this.employee = response;\r\n    this.addForm.controls.firstName.setValue(this.employee.firstName);\r\n    this.addForm.controls.lastName.setValue(this.employee.lastName);\r\n    this.addForm.controls.emailId.setValue(this.employee.emailId);\r\n    this.addForm.controls.inTime.setValue('');\r\n    this.addForm.controls.outTime.setValue('');\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.addForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    console.log(\"Employee creation started.\");\r\n    this.httpClientService.createEmployee(this.addForm.value)\r\n      .subscribe(data => {\r\n        console.log(\"Employee created successfully.\");\r\n        this.router.navigate(['employeesearch']);\r\n      });\r\n\r\n  };\r\n\r\n  InOutTimeValidation: ValidatorFn = (control: FormGroup): ValidationErrors | null => {\r\n    try {\r\n      let inTime = control.get('inTime').value;\r\n      let outTime = control.get('outTime').value;\r\n      if (inTime > outTime && outTime) {\r\n        console.log(\"Please set an Out Date and Time that is after the In Date and Time.\");\r\n        alert(\"Please set an Out Time that is after the In Time.\");\r\n        control.get('outTime').setValue('');\r\n        return {};\r\n\r\n      } else {\r\n        return {};\r\n      }\r\n    } catch (err) {\r\n    }\r\n  };\r\n\r\n\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EmployeeComponent } from './employee/employee.component';\r\nimport { AddEmployeeComponent } from './add-employee/add-employee.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ExistingEmployeeComponent } from './existing-employee/existing-employee.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { SearchComponent } from './search/search.component';\r\nimport { AuthGaurdService } from './service/auth-gaurd.service';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: EmployeeComponent,canActivate:[AuthGaurdService] },\r\n  { path: 'addemployee', component: AddEmployeeComponent,canActivate:[AuthGaurdService]},\r\n  { path: 'employeesearch', component: SearchComponent,canActivate:[AuthGaurdService]},\r\n  { path: 'submitTime', component: EmployeeComponent,canActivate:[AuthGaurdService]},\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'logout', component: LogoutComponent,canActivate:[AuthGaurdService] },\r\n  { path: 'existingEmployee', component: ExistingEmployeeComponent,canActivate:[AuthGaurdService] }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-header></app-header>\\r\\n    <router-outlet></router-outlet>\\r\\n    <app-footer></app-footer>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Time-Tracker-Client';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { EmployeeComponent } from './employee/employee.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AddEmployeeComponent } from './add-employee/add-employee.component';\r\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { JWTAuthHtppInterceptorService } from './service/jwtauth-htpp-interceptor-service.service';\r\nimport { SearchComponent } from './search/search.component';\r\nimport { FilterPipe } from './pipe/filter.pipe';\nimport { ExistingEmployeeComponent } from './existing-employee/existing-employee.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    EmployeeComponent,\r\n    AddEmployeeComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    LoginComponent,\r\n    LogoutComponent,\r\n    SearchComponent,\r\n    FilterPipe,\r\n    ExistingEmployeeComponent\r\n ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxPaginationModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide:HTTP_INTERCEPTORS, useClass:JWTAuthHtppInterceptorService, multi:true \r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlL2VtcGxveWVlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div>\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <table class=\\\"table table-striped\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>First Name</th>\\r\\n          <th>Last Name</th>\\r\\n          <th>Email Id</th>\\r\\n          <th>In Time</th>\\r\\n          <th>Out Time</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let employee of employees | paginate: { itemsPerPage: count, currentPage: p }\\\">\\r\\n          <td>{{employee.firstName}}</td>\\r\\n          <td>{{employee.lastName}}</td>\\r\\n          <td>{{employee.emailId}}</td>\\r\\n          <td>{{employee.inTime}}</td>\\r\\n          <td>{{employee.outTime}}</td>\\r\\n          <td><button class=\\\"btn btn-danger\\\" (click)=\\\"deleteEmployee(employee)\\\"> Delete Employee</button></td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <!--Including the pagination control.-->\\r\\n  <div class=\\\"text-right\\\">\\r\\n    <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClientService, Employee } from '../service/httpclient.service';\r\n\r\n@Component({\r\n  selector: 'app-employee',\r\n  templateUrl: './employee.component.html',\r\n  styleUrls: ['./employee.component.css']\r\n})\r\nexport class EmployeeComponent implements OnInit {\r\n\r\n  employees:Employee[];\r\n   // Pagination parameters.\r\n   p: Number = 1;\r\n   count: Number = 5;   \r\n   \r\n  constructor(\r\n    private httpClientService:HttpClientService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n     this.httpClientService.getEmployees().subscribe(\r\n      response =>this.handleSuccessfulResponse(response),\r\n     );\r\n  }\r\n\r\nhandleSuccessfulResponse(response)\r\n{\r\n    this.employees=response;\r\n}\r\n\r\ndeleteEmployee(employee: Employee): void {\r\n   this.httpClientService.deleteEmployee(employee)\r\n     .subscribe( data => {\r\n      this.employees = this.employees.filter(u => u !== employee);\r\n   })\r\n};\r\n\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4aXN0aW5nLWVtcGxveWVlL2V4aXN0aW5nLWVtcGxveWVlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!--<div class=\\\"col-md-6\\\" user-container>\\n  <h2 class=\\\"text-center\\\">Submit Your Time</h2>\\n  <form [formGroup]=\\\"existingEmployeeForm\\\" (ngSubmit)=\\\"onSubmit()\\\">-->\\n<div class=\\\"col-md-6\\\">\\n  <h2 class=\\\"text-center\\\">Submit Your Time</h2>\\n  <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"firstName\\\">First Name:</label>\\n      <input type=\\\"name\\\" placeholder=\\\"First Name\\\" name=\\\"firstName\\\" class=\\\"form-control\\\" formControlName=\\\"firstName\\\"\\n        id=\\\"firstName\\\">\\n      <div class=\\\"error\\\"\\n        *ngIf=\\\"addForm.controls['firstName'].hasError('required') && addForm.controls['firstName'].touched\\\">First name\\n        is required</div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"lastName\\\">Last Name:</label>\\n      <input type=\\\"name\\\" placeholder=\\\"Last Name\\\" name=\\\"lastName\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\"\\n        id=\\\"lastName\\\">\\n      <div class=\\\"error\\\"\\n        *ngIf=\\\"addForm.controls['lastName'].hasError('required') && addForm.controls['lastName'].touched\\\">Last name is\\n        required</div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"emailId\\\">Email ID:</label>\\n      <input type=\\\"email\\\" placeholder=\\\"Email ID\\\" name=\\\"emailId\\\" formControlName=\\\"emailId\\\" class=\\\"form-control\\\"\\n        id=\\\"emailId\\\">\\n      <div class=\\\"error\\\"\\n        *ngIf=\\\"addForm.controls['emailId'].hasError('required') && addForm.controls['emailId'].touched\\\">Email ID is\\n        required</div>\\n      <div class=\\\"error\\\" *ngIf=\\\"addForm.controls['emailId'].hasError('email') && addForm.controls['emailId'].touched\\\">\\n        Email ID is required</div>\\n\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"inTime\\\">In Time:</label>\\n      <input type=\\\"text\\\" placeholder=\\\"21.11.2019 09:00\\\" name=\\\"inTime\\\" class=\\\"form-control\\\" formControlName=\\\"inTime\\\"\\n        id=\\\"inTime\\\">\\n      <div class=\\\"error\\\" *ngIf=\\\"addForm.controls['inTime'].hasError('required') && addForm.controls['inTime'].touched\\\">\\n        In time is required</div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"outTime\\\">Out Time:</label>\\n      <input type=\\\"text\\\" placeholder=\\\"21.11.2019 17:00\\\" name=\\\"outTime\\\" class=\\\"form-control\\\" formControlName=\\\"outTime\\\"\\n        id=\\\"outTime\\\">\\n      <div class=\\\"error\\\"\\n        *ngIf=\\\"addForm.controls['outTime'].hasError('required') && addForm.controls['outTime'].touched\\\">Out time is\\n        required</div>\\n    </div>\\n\\n    <button class=\\\"btn btn-primary\\\" [disabled]=\\\"addForm.invalid\\\">Create</button>\\n  </form>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl, ValidatorFn, ValidationErrors } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { HttpClientService, Employee } from '../service/httpclient.service';\n\n@Component({\n  selector: 'app-existing-employee',\n  templateUrl: './existing-employee.component.html',\n  styleUrls: ['./existing-employee.component.css']\n})\nexport class ExistingEmployeeComponent implements OnInit {\n\n  public employee: Employee = null;\n\n  constructor(private formBuilder: FormBuilder,private router: Router, private httpClientService: HttpClientService) { }\n\n  existingEmployeeForm: FormGroup;\n\n  ngOnInit() {\n    let emailId = this.httpClientService.getEmployeeEmailId();\n    if(!emailId) {\n      alert(\"Invalid action.\")\n      this.router.navigate(['employeesearch']);\n      return;\n    }\n\n    this.existingEmployeeForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      emailId: ['', [Validators.required, Validators.email]],\n      inTime: ['', Validators.required],\n      outTime: ['', Validators.required]\n    },\n    { validators: this.InOutTimeValidation });\n    \n    this.httpClientService.getEmployeeByEmailId().subscribe(\n      response => this.handleResponse(response),\n    );\n  }\n\n  handleResponse(response) {\n    this.employee = response;\n    this.existingEmployeeForm.controls.firstName.setValue(this.employee.firstName);\n    this.existingEmployeeForm.controls.lastName.setValue(this.employee.lastName);\n    this.existingEmployeeForm.controls.emailId.setValue(this.employee.emailId);\n    this.existingEmployeeForm.controls.inTime.setValue('');\n    this.existingEmployeeForm.controls.outTime.setValue('');\n  }\n\n  InOutTimeValidation: ValidatorFn = (control: FormGroup): ValidationErrors | null => {\n    try {\n      let inTime = control.get('inTime').value;\n      let outTime = control.get('outTime').value;\n      if (inTime > outTime && outTime) {\n        console.log(\"Please set an Out Date and Time that is after the In Date and Time.\");\n        alert(\"Please set an Out Time that is after the In Time.\");\n        control.get('outTime').setValue('');\n        return {};\n\n      } else {\n        return {};\n      }\n    } catch (err) {\n    }\n  };\n\n  onSubmit(): void {\n    if (this.existingEmployeeForm.invalid) {\n      return;\n    }\n\n    console.log(\"Employee creation started.\");\n    this.httpClientService.createEmployee(this.existingEmployeeForm.value)\n      .subscribe(data => {\n        console.log(\"Employee created successfully.\");\n        this.router.navigate(['employeesearch']);\n      });\n\n  };\n\n}\n","module.exports = \".footer {\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    width:100%;\\r\\n    height: 40px;\\r\\n    background-color: #222222;\\r\\n}\\r\\n\\t\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0lBQ2xCLFNBQVM7SUFDVCxVQUFVO0lBQ1YsWUFBWTtJQUNaLHlCQUF5QjtBQUM3QiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb290ZXIge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgd2lkdGg6MTAwJTtcclxuICAgIGhlaWdodDogNDBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyMjIyMjI7XHJcbn1cclxuXHQiXX0= */\"","module.exports = \"<footer class=\\\"footer\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n      <span class=\\\"text-muted\\\"></span>\\r\\n  </div>\\r\\n\\r\\n</footer>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<header>\\r\\n  <nav class =\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\r\\n  \\r\\n  <ul class=\\\"navbar-nav\\\">\\r\\n    <li><a *ngIf=\\\"loginService.isUserLoggedIn()\\\" routerLink=\\\"/\\\" class=\\\"nav-link\\\">Dashboard</a></li>\\r\\n    <li><a *ngIf=\\\"loginService.isUserLoggedIn()\\\" routerLink=\\\"/employeesearch\\\" class=\\\"nav-link\\\">Time Tracker</a></li>\\r\\n    <li><a *ngIf=\\\"loginService.isUserLoggedIn()\\\" routerLink=\\\"/addemployee\\\" class=\\\"nav-link\\\">Submit Time</a></li>\\r\\n    <li><a *ngIf=\\\"!loginService.isUserLoggedIn()\\\" routerLink=\\\"/login\\\" class=\\\"nav-link\\\"> Login</a></li>\\r\\n    <li><a *ngIf=\\\"loginService.isUserLoggedIn()\\\" routerLink=\\\"/logout\\\" class=\\\"nav-link\\\">Log Out</a></li>\\r\\n  \\r\\n  \\r\\n  </ul>\\r\\n  \\r\\n  </nav>\\r\\n  \\r\\n  </header>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '../service/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor(private loginService:AuthenticationService){ }\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".login-container {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n            flex-direction: column;\\r\\n    background-color: blanchedalmond;\\r\\n    margin: 2em auto auto;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG9CQUFhO0lBQWIsYUFBYTtJQUNiLDRCQUFzQjtJQUF0Qiw2QkFBc0I7WUFBdEIsc0JBQXNCO0lBQ3RCLGdDQUFnQztJQUNoQyxxQkFBcUI7RUFDdkIiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYW5jaGVkYWxtb25kO1xyXG4gICAgbWFyZ2luOiAyZW0gYXV0byBhdXRvO1xyXG4gIH0iXX0= */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n\\r\\n  <div class=\\\"col-md-6 login-container\\\">\\r\\n    <h2 style=\\\"margin: auto\\\">Login </h2>\\r\\n    <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"username\\\">Username:</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\" id=\\\"username\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"error\\\" *ngIf=\\\"loginForm.controls['username'].hasError('required') && loginForm.controls['username'].touched\\\">Username is required</div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"pwd\\\">Password:</label>\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" id=\\\"pwd\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"error\\\" *ngIf=\\\"loginForm.controls['password'].hasError('required') && loginForm.controls['password'].touched\\\">Password is required</div>\\r\\n      </div>\\r\\n      <button class=\\\"btn btn-success\\\" [disabled]=\\\"loginForm.invalid\\\">Login</button>\\r\\n      <div *ngIf=\\\"invalidLogin\\\" class=\\\"error\\\">\\r\\n        <div>Invalid credentials.</div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../service/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username = ''\r\n  password = ''\r\n  \r\n  loginForm: FormGroup;\r\n  invalidLogin: boolean = false;\r\n\r\n  constructor(private formBuilder: FormBuilder,private router: Router,\r\n    private loginservice: AuthenticationService) { }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.compose([Validators.required])],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    //alert('1 '+this.loginForm.invalid)\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    (this.loginservice.authenticate(this.loginForm.controls.username.value, this.loginForm.controls.password.value).subscribe(\r\n      data => {\r\n          this.router.navigate(['']);\r\n      },\r\n      error => {\r\n        this.invalidLogin = true\r\n\r\n      }\r\n    )\r\n    );\r\n\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ291dC9sb2dvdXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\r\\n  logout works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '../service/authentication.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.css']\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n\r\n  constructor(\r\n    private authentocationService: AuthenticationService,\r\n    private router: Router) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authentocationService.logOut();\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'filter',\n})\nexport class FilterPipe implements PipeTransform {\n    transform(items: any[], value: string, prop: string): any[] {\n        if (!items) return [];\n        if (!value) return items;\n\n        return items.filter(singleItem =>\n            singleItem[prop].toLowerCase().startsWith(value.toLowerCase())\n        );\n   \n    }\n}","module.exports = \"td {\\r\\n    padding-top:0px;\\r\\n    padding-bottom:0px;\\r\\n    padding-right:20px;   \\r\\n  }\\r\\n\\r\\n  .add{\\r\\n    margin-top:10px;\\r\\n    margin-bottom:10px;\\r\\n    background-color:green;\\r\\n    color:white;\\r\\n    min-width:90px;\\r\\n    min-height:10px;\\r\\n}\\r\\n\\r\\n  .search{\\r\\n    background-color:blue;\\r\\n    color:white;\\r\\n    min-width:90px;\\r\\n    min-height:10px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VhcmNoL3NlYXJjaC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixXQUFXO0lBQ1gsY0FBYztJQUNkLGVBQWU7QUFDbkI7O0VBRUE7SUFDSSxxQkFBcUI7SUFDckIsV0FBVztJQUNYLGNBQWM7SUFDZCxlQUFlOztBQUVuQiIsImZpbGUiOiJzcmMvYXBwL3NlYXJjaC9zZWFyY2guY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRkIHtcclxuICAgIHBhZGRpbmctdG9wOjBweDtcclxuICAgIHBhZGRpbmctYm90dG9tOjBweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6MjBweDsgICBcclxuICB9XHJcblxyXG4gIC5hZGR7XHJcbiAgICBtYXJnaW4tdG9wOjEwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOjEwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOmdyZWVuO1xyXG4gICAgY29sb3I6d2hpdGU7XHJcbiAgICBtaW4td2lkdGg6OTBweDtcclxuICAgIG1pbi1oZWlnaHQ6MTBweDtcclxufVxyXG5cclxuLnNlYXJjaHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6Ymx1ZTtcclxuICAgIGNvbG9yOndoaXRlO1xyXG4gICAgbWluLXdpZHRoOjkwcHg7XHJcbiAgICBtaW4taGVpZ2h0OjEwcHg7XHJcblxyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"row\\\">\\n            <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-xs-4\\\">\\n                  <label for=\\\"firstName\\\">First Name:</label>\\n                  <input [(ngModel)]=\\\"searchFirstName\\\" placeholder=\\\"First Name\\\">\\n            </div>\\n            <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-xs-4\\\">\\n                  <label for=\\\"firstName\\\">Last Name:</label>\\n                  <input [(ngModel)]=\\\"searchlastName\\\" placeholder=\\\"Last Name\\\">\\n            </div>\\n            <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-xs-4\\\">\\n                  <label for=\\\"firstName\\\">Email ID:</label>\\n                  <input [(ngModel)]=\\\"searchEmail\\\" placeholder=\\\"Email ID\\\">\\n            </div>\\n\\n</div>\\n<div class=\\\"row\\\">\\n</div>\\n\\n<div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\n            <button class=\\\"btn search\\\" (click)=\\\"searchClick()\\\">Search</button>\\n\\n            <button class=\\\"btn add\\\" (click)=\\\"setEmployeeId(-1)\\\" routerLink=\\\"/addemployee\\\">Add New</button>\\n      </div>\\n</div>\\n<div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\n            <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                        <tr>\\n                              <td><b>First Name</b></td>\\n                              <td><b>Last Name</b></td>\\n                              <td><b>Email ID</b></td>\\n                              <td><b>In Time</b></td>\\n                              <td><b>Out Time</b></td>\\n                              <td></td>\\n                        </tr>\\n                  </thead>\\n                  <tbody>\\n                        <tr\\n                              *ngFor=\\\"let employee of employees | paginate: { itemsPerPage: searchCount, currentPage: searchPage }\\\">\\n                              <td>{{employee.firstName}}</td>\\n                              <td>{{employee.lastName}}</td>\\n                              <td>{{employee.emailId}}</td>\\n                              <td>{{employee.inTime}}</td>\\n                              <td>{{employee.outTime}}</td>\\n                              <td>\\n                                    <button class=\\\"btn add\\\" (click)=\\\"existingEmployee(employee)\\\"\\n                                          routerLink=\\\"/addemployee\\\">Add</button>\\n\\n                                    <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteEmployee(employee)\\\">Delete</button>\\n                              </td>\\n                        </tr>\\n                  </tbody>\\n            </table>\\n            <!--Including the pagination control.-->\\n            <div class=\\\"text-right\\\">\\n                  <pagination-controls (pageChange)=\\\"searchPage = $event\\\"></pagination-controls>\\n            </div>\\n\\n      </div>\\n</div>\"","\nimport { Component, OnInit } from '@angular/core';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { HttpClientService, Employee } from '../service/httpclient.service';\n\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n  public employees: Employee[] = [];\n  public allEmployees: Employee[] = [];\n\n  public employee: Employee = null;\n  public relevantEmployee: Employee = null;\n\n  public searchFirstName = \"\";\n  public searchlastName = \"\";\n  public searchEmail = \"\";\n  // Pagination parameters.\n  searchPage: Number = 1;\n  searchCount: Number = 5;\n\n  constructor(private httpClientService: HttpClientService,\n    private router: Router,\n    private activeRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.httpClientService.getEmployees().subscribe(\n      response => this.handleSuccessfulResponse(response),\n    );\n  }\n\n  handleSuccessfulResponse(response) {\n    this.employees = response;\n    this.allEmployees = response;\n  }\n\n  /*showAll() removes search constraints and makes the \n  html table show every entry in the database */\n  public showAll() {\n    this.employees = this.allEmployees;\n  }\n\n  /*searchClick() constrains the list of displayed employees by \n  first name, last name, email*/\n  public searchClick() {\n    this.employees = [];\n\n    //alert(\"searchClick()\");\n\n    //for each entry in 'allemployees'...\n    for (let i = 0; i < this.allEmployees.length; i++) {\n      //check name\n      if (this.searchFirstName.length > 0) {\n        if (!this.allEmployees[i].firstName.toUpperCase().includes(this.searchFirstName.toUpperCase()))\n          continue;\n      }\n      //check email\n      if (this.searchEmail.length > 0) {\n        if (!this.allEmployees[i].emailId.toUpperCase().includes(this.searchEmail.toUpperCase()))\n          continue;\n      }\n      //check phone\n      if (this.searchlastName.length > 0) {\n        if (!this.allEmployees[i].lastName.toUpperCase().includes(this.searchlastName.toUpperCase()))\n          continue;\n      }\n      this.employees.push(this.allEmployees[i]);\n    }//end of for loop\n  }\n\n  public setEmployeeId(id: number) {\n    this.httpClientService.setEmployeeId(id);\n  }\n\n  public setEmployeeEmailId(emailId: string) {\n    this.httpClientService.setEmployeeEmailId(emailId);\n  }\n\n  existingEmployee(employee: Employee): void {\n    this.httpClientService.setEmployee(employee)\n  };\n\n  deleteEmployee(employee: Employee): void {\n    this.httpClientService.deleteEmployee(employee)\n      .subscribe( data => {\n       this.employees = this.employees.filter(u => u !== employee);\n    })\n };\n \n}\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGaurdService implements CanActivate {\r\n\r\n  constructor(private router: Router,\r\n    private authService: AuthenticationService) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (this.authService.isUserLoggedIn())\r\n      return true;\r\n\r\n    this.router.navigate(['login']);\r\n    return false;\r\n\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport class User{\r\n  constructor(\r\n    public status:string,\r\n     ) {}\r\n  \r\n}\r\n\r\nexport class JwtResponse{\r\n  constructor(\r\n    public jwttoken:string,\r\n     ) {}\r\n  \r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  constructor(\r\n    private httpClient:HttpClient\r\n  ) { \r\n     }\r\n\r\n     authenticate(username, password) {\r\n      return this.httpClient.post<any>('http://localhost:8080/authenticate',{username,password}).pipe(\r\n       map(\r\n         userData => {\r\n          sessionStorage.setItem('username',username);\r\n          let tokenStr= 'Bearer '+userData.token;\r\n          sessionStorage.setItem('token', tokenStr);\r\n          return userData;\r\n         }\r\n       )\r\n  \r\n      );\r\n    }\r\n  \r\n\r\n  isUserLoggedIn() {\r\n    let user = sessionStorage.getItem('username')\r\n    //console.log(!(user === null))\r\n    return !(user === null)\r\n    //return true;\r\n  }\r\n\r\n  logOut() {\r\n    sessionStorage.removeItem('username')\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of, Subject } from 'rxjs';\r\n\r\nexport class Employee {\r\n  constructor(\r\n    public empId: number,\r\n    public firstName: string,\r\n    public lastName: string,\r\n    public emailId: string,\r\n    public inTime: string,\r\n    public outTime: string\r\n  ) { }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpClientService {\r\n  \r\n  setGroupFilter$ = new Subject<any>();\r\n  getGroupFilter = this.setGroupFilter$.asObservable();\r\n  \r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n  }\r\n\r\n  getEmployees() : Observable<any> {\r\n    console.log('******   getEmployees');\r\n    return this.httpClient.get<Employee[]>('http://localhost:8080/employees');\r\n  }\r\n\r\n  getEmployeeByEmailId() : Observable<any> {\r\n    console.log('******   getEmployeeByEmailId');\r\n    return this.httpClient.get<Employee[]>(\"http://localhost:8080/employees\" + \"/email/\" + this.getEmployeeEmailId());\r\n  }\r\n\r\n  public deleteEmployee(employee) {\r\n    console.log('deleteEmployee');\r\n    return this.httpClient.delete<Employee>(\"http://localhost:8080/employees\" + \"/\" + employee.empId);\r\n  }\r\n\r\n  public createEmployee(employee) {\r\n    console.log('****  createEmployee '+employee);\r\n    return this.httpClient.post<Employee>(\"http://localhost:8080/employees\", employee);\r\n  }\r\n\r\n  remployeeId: number = -1;\r\n  remailId: string = \"\";\r\n  remployee: Employee = null;\r\n\r\n  public getEmployeeId(){\r\n    return this.remployeeId;\r\n  }\r\n\r\n  public setEmployeeId(id: number){\r\n    this.remployeeId = id;\r\n  }\r\n\r\n  public getEmployee(){\r\n    return this.remployee;\r\n  }\r\n\r\n  public setEmployee(remployee: Employee){\r\n    this.remployee = remployee;\r\n  }\r\n\r\n  public getEmployeeEmailId(){\r\n    return this.remailId;\r\n  }\r\n\r\n  public setEmployeeEmailId(emailId: string){\r\n    this.remailId = emailId;\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JWTAuthHtppInterceptorService implements HttpInterceptor {\n\n  constructor() { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\nconsole.log('sessionStorage.getItem(username) '+sessionStorage.getItem('username'))\nconsole.log('sessionStorage.getItem(token) '+sessionStorage.getItem('token'))\n    if (sessionStorage.getItem('username') && sessionStorage.getItem('token')) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: sessionStorage.getItem('token')\n        }\n      })\n    }\n\n    return next.handle(req);\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}